AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  FlaskAppFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.lambda_handler
      Runtime: python3.9
      MemorySize: 128
      Timeout: 30
      CodeUri: ./
      Environment:
        Variables:
          FLASK_ENV: production
      Policies:
        - AWSLambdaBasicExecutionRole
        - AmazonAPIGatewayInvokeFullAccess
        - AmazonRDSFullAccess
      Events:
        WelcomeApiEvent:
          Type: Api
          Properties:
            Path: /welcome
            Method: ANY
        GoodbyeApiEvent:
          Type: Api
          Properties:
            Path: /goodbye
            Method: ANY
        # Add your new api paths here
        HealthApiEvent:
          Type: Api
          Properties:
            Path: /health
            Method: GET

  # RDS Instance
  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t4g.micro
      AllocatedStorage: 5
      Engine: postgres
      EngineVersion: "13.18"
      MasterUsername: DsHackathonGroup1
      MasterUserPassword: !Sub '{{resolve:ssm-secure:/DsHackathonGroup1/rds/password}}'
      PubliclyAccessible: true
      VPCSecurityGroups:
        - !GetAtt RDSSecurityGroup.GroupId

  # Security Group for RDS
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable database access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: 0.0.0.0/0  # Restrict to appropriate CIDR range or VPCy